package agilor.distributed.storage.inter.thrift; /**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum AGGREGATE implements TEnum {
  AF_SUMMARY(0),
  AF_MINIMUM(1),
  AF_MAXIMUM(2),
  AF_AVERAGE(3),
  AF_COUNT(4),
  AF_SUMMARY_FOR_CONTINOUS(5),
  AF_AVERAGE_FOR_CONTINOUS(6);

  private final int value;

  private AGGREGATE(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static AGGREGATE findByValue(int value) { 
    switch (value) {
      case 0:
        return AF_SUMMARY;
      case 1:
        return AF_MINIMUM;
      case 2:
        return AF_MAXIMUM;
      case 3:
        return AF_AVERAGE;
      case 4:
        return AF_COUNT;
      case 5:
        return AF_SUMMARY_FOR_CONTINOUS;
      case 6:
        return AF_AVERAGE_FOR_CONTINOUS;
      default:
        return null;
    }
  }
}
